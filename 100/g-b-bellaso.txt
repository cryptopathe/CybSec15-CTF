Do you know about Stigler's law of eponymy?


16/16   MTUvMTYgICBNVFF2TVRZZ0lDQk5WRTEyVFZSWlowbERRazVXUld3eVZGWlNXbG93YkVSUmF6VlhVbFpaZVZaR1dsTlhiRzkzWWtWU1VtRjZWbGhWYkZaYVpWWmFSMWRzVGxoaVJ6a3pXV3RXVTFWdFNrWlRiR1JoVm5wR2RWUlZXbUZUUlRGWlZHeEthVko2YTNwWFYzUlhXVlpXUjFkc1pGUmlSVnBYVkZWa1UyUnNXbFpYYms1WFRWWndlVmRyWkhOaFZrcFZWbXhvVjJKWWFGUlZha1pTWlVaa2MxWnRiRk5YUlVwb1ZtMTRZVlpyTVZkaVJscFlZbFZhV0ZsclpGTk5WbHAwWlVkR1ZXSkdjSHBaTUZwdlZqRktjMk5JU2xkU1JWcE1XVEp6TlZZeFpIUmlSazVPWWxkb1ZsWnRNVEJoTURWSVZXNU9XR0pzU25OVmJURlRXVlphY1ZKcmRGaFNiSEI2V1ZWak5WWXdNWEpqUldoYVRVWlZNVlpxU2t0WFYwWkZWR3hhYUdFeGNGUlhiRlpoV1ZkU1YxVnVVbWhTYXpWdlZGUkNTMWRHV1hoYVJFSm9ZWHBXV0ZZeGFITldSMFY1Vld4c1dtSkhVblpaVlZwWFpFZFdTVnBHWkU1WFJVcFlWbXBKZUZJeVJuSk5WbWhXWW0xNFZsbHJXbmRqYkd4V1ZsaGthMDFWTlhsWmExcHJZVVV4Vm1ORmJGZGlXRUpNVmtjeFYxWXhUblZUYlVaVFlrVndkMVpYTVRSa01sRjRWMnhvVDFkSFVuRlVWbVJUVTBac2NtRkZkRmhTTUhCWFZqSXdOVlp0U2xWV2ExSldUVVp3WVZwV1pGZFRSa3AwWWtaT2FFMHdTVEpXTVZKRFlqSlJlRmRZWkU1WFJWcFVWbXRXUzFkR1duSldiVVpvVW14YWVGVnRNVEJoYXpGeVYydG9XR0V4Y0ZCV1ZFWmhaRlpHYzJOR1pFNVdNbWQ2Vmxod1IxTnRWa2RVYkd4b1VteGFjRmxZY0ZkWFZtUllaVWQwVDFKc2NFaFpNRnB2Vkd4YVIxTnNiRmRpVkVaVVZqRmFkMUpzY0VaYVJtaHBVbTEzZWxacVNqQmlNV1J5VFZWa1dHSnJjRmhVVldSVFZFWldjVk5yT1ZSV2JFcDZWakl4YzFkR1NYbGFSRnBYVFc1b2NsUnJXbXRrUmxwelYyczFWMkpHY0ZoWFYzUmhaREZSZUZadVNsZGlWVnBVVkZaYWQwMUdVbGRWYTA1b1ZsUkdXRmxyVWxOV2F6RjFWVzFvVjAxSFVreFZNR1JIVTBaS2RGSnNaRTVOVld3MlZteFNRMWxXV1hsVWJHUlVZbXR3VVZacVRrTlVNVnAwVGxWS2EwMVhVbGxhUldSSFZsVXhjbU5GYkZaTmJtaDZXVlZhUzJSV1JuTmhSbFpYWWxaS1ZGZHJVa2RoTVZsNFdraFdWV0pIYUZSWlZFNURUbFpaZVdSSGRHdE5WbFkwVmpGb2IxWkhTa2xSYkd4WFlXczFWRmxWV25kU1ZrNXlUbGQ0VTJKSVFYaFdiR040VGtaYVIxTllhRlJpYmtKWlZtcE9VMkZHYkRaUlZFWlhUVlphZWxkcldtRmhWa3BWVm14c1dGWnRhRE5WYWtwWFZqSkZlbHBHWkdsaVZrcFpWMWQwWVdNd05YTlhiR2hQVmpCYVdGUlhkR0ZsVmxsNVpFUlNWMkpWY0ZwWlZXaExWMjFXY21ORmFGWmhhM0JRVlRCa1YxTkhSa1pPVlRWVFYwVktUVlp0TUhoT1IwVjVWVmhvVkZkSGFGZFdNR1EwVm14WmQxcEhPVmhXYlhnd1dsVldNR0ZzU25OWGFrSmFUVE5DU0ZsWGMzaFhSMVpKWTBad1YxWXdNSGhXYWtKclV6RkplVk5yVmxaaVIyaHZWRlpXZDFKV1duRlRhbEphVmpGS1NWWnRkR3RoVmtwelkwaENWMDFHY0V4YVZscHJWakZ3UlZWc1VrNVdNVXBKVm0wd01WUXlSbGRUYmxaU1lsUnNWbFp0TVc5Uk1YQllaVWQwV0ZZd05VZFhhMXByVkcxS1JtTkZjRmRpVkVWM1dYcEdjMVl4VGxsalIyaFVVbFZ3V0ZkWGVGTlNiVlp6Vld4a1dHSlZXbFJVVm1SVFpXeGFTR1ZIUmxWaVJuQXhWVmR3VjFZeFNuTmpTRnBXWld0YVlWcFdXa3RrVmxKMFkwWk9hVlpyY0ZwV01WcHJaV3N4VjFkclpHcFNWMmh6VldwQ1lXTldXblJrU0dSc1ZtNUNSMVl5Y3pWaFJscHlZa1JTVmsxdVFtaFdNRnBoWXpGa2RHRkhSbE5TV0VKTlZsUkNZVk14WkZoVWEyUlVZbGRvVDFsdE1XOVhiRnAwVFZoa1ZVMVZWalJXUjNSclYwZEZlRmRzVmxwWFNFSllXWHBHVjJSRk1WZFVhelZYWWtoQ1dsWkdXbTlVTVZweVRWaEtXRlpGY0ZoWmJGSlhUVEZaZDFkc2NHeGlWVnBLVmpKNGQyRkhSWGhqU0d4WVYwaENTRmxVUm10WFJrcHlZVVpPYVZKVVZsVldiWGh2VVRKSmVGZHVVazVUUjFKelZXeFNWMU5HWkhKWGJYUlhUV3R3ZWxVeU5VdFdiVVp5VGxaU1dtRnJXbnBaTW5oaFpGWndSMkZHWkdsVFJVcGhWako0VjJJeFVYaGFSV2hVWWtad1dGbFhlRXRaVmxKV1YydDBWbEpzYkRWVVZscHJZVzFLU0ZWdWNGcFdWMUpJVmxSR1dtVkdUbk5pUm1SWFVsWndiMWRyVWtkVE1rNXlUbFprWVZKc1duQldhazV2VmxaYWRFMUlhRTVTVkVJMFZqSTFVMVJzWkVoVmJGWmFWMGhDU0ZZeFdsZGpNa1pJVDFab1UySldTa3BXYkdSNlRsWlpkMDFWWkZoaGF6VllWRlphZDJGR2EzbGxSMFpyVm01Q1NGbFZXazloVm1SSVducEtWMDFXY0ZoV2FrWlNaVlpLY2xwR1VtbGhlbFozVmxkMFZrMVdaRWRWYkdoUFZucHNUMVJXWkRSbFZtUnlWbXBDVmsxRVJsbFdWelZ2Vm14WmVtRkVUbGRoYTFwb1drWmFSMWRYVGtkaFJtUnBVbTVDTlZac1kzZGxSbGw0Vkd0a1ZtSnJjRzlWYlhSTFYwWnNjMXBIT1d0aVJuQklWakl4UjJFd01YSmlSRkpYVFdwV1RGWnRNVVpsYkZaeldrWldWMkpJUWpaV1IzUmhXVmRTUms1V1pHRlNiVkpZVkZWb1ExTldaRlZSYlRsU1RWWnNOVlZ0TlV0VU1XUkhZMGRvVm1Gck5YWlpWVnBYWTFaS2RGSnRkRk5XUjNoWlZsUktlazFYUmxkVGJHeFNWa1Z3V0Zsc2FFTlRNVkpYVjJ4YWJGSnNXakZXUnpGSFZURlplV0ZHYUZoV00xSm9Xa1JHWVdNeFpIVlZiWGhVVWpGS1dsWlhNVFJUTVZwelZtNVNiRkpVYkZoVVYzUjNWakZaZVdSSVRsZFdWRVpZV1RCb1MxZHNXbk5qUjJoWFRWWndTRmt4V210ak1YQkhXa1pPVjAweFJYZFdiVEV3VlRGSmVHSkdhRlZpYTNCUFZtMTRkMkZHVm5STlZrNVlWbXhhZUZVeU1EVmhSa3B6WTBWb1YwMXFSa2haVkVGNFZqSk9SbUZHWkU1V01taDVWakZhWVZNeVRuSk9WbVJYWWtad2NGWXdXa3BsYkdSeldrUlNXbFpyTlVsV1IzQmhWVEpLU0ZWck9WcFdSVFZFVkd4YVlWWldUbkZSYXpWVFlrZDNlbFpHV21GaE1WcElVMnRhVkdKWGFGZFpWRVpoWVVaa1YxZHVaRmROVjFKNVdrVmtkMkZXVGtaVGEyeFlWbXhhY2xsNlNrZFNhekZKV2taU2FHSkZjRmxYVjNSaFV6RktSMkpHVmxKV1JWcFVWRlpvUTFJeFpISlhiVVpvVm10c05GVXllSGRYUmxwelUyeENWMVpGV21oWmVrWmhaRlpXZEdWR1VsTldSbHBSVm10YVlWbFhUWGRPVm1ScVVteHdiMVZxVGxOaU1WcDBaRWhPVGsxWGRETldiVEExVmpBeFJWSnFSbFpXTTFKMlZtcEtSMk5zU25GVmJVWlRZbFpLU1ZaWGVHRlZNazE1Vkd0b2FGSlVWbkJWYkdoRFUyeGFjVk5xVW1oTlJGWklWVEZvYzFaWFNuSmpSVGxYWWxSR1ZGbFZXbGRrUlRGWFZHeFdUbFpyY0ZoV2JUQXhZVEZhU0ZOclpHbFNSa3BZVkZjMWIxVkdXbkpXV0doWFRWVTFlRlZYZUd0aFZtUklZVWhzVjJKWVVuSlZla3BQWkVaU2NtRkhhRk5pU0VKM1ZtMTBWMWxWTVhOYVJsWlNZbFZhWVZacVFURlhSbHBJVGxaT1ZsSnNiRFpXVnpWRFZtMUtWVlpyVWxaTlZuQm9XVEZhVDFkV2NFWlBWbVJwVW01Qk1WWnJXbUZaVjBsNFYyNVNWR0pzV2xOWmEyUnZWbXhhY1ZSclRsaFNiSEJIVmpKNGQyRXdNVmxSYTJSaFVsWndkbFpxU2t0U01rbDZZVVprVjFKWE9IZFdiWEJIVjIxV1YxUnVTbWxTYTNCdldXdG9RMWRXV2xoalJUbFdUV3RhU0ZkcldtdFhSMFkyWWtaV1ZtSllhR2hhVmxwelZteHdSVkZzV2s1aE0wSmFWMVpXWVZZeFdYaFRiazVZWWxkb1dGUlhOVTlPUmxaeFVtMTBhMVpyY0hwV1Z6RnZZVlpLV1ZGc2NGZGhNWEJvV1ZSR1ZtVldXblZVYlVaVVVsaENXVmRYTVhwTlZsbDRZa2hPVjJKdFVrOVdiWGhoVjFaU1YxWnRkRmROVm5CNldUQm9kMWRyTVVkVGJFSllWbXh3WVZwWE1VZFRWMDVIVm0xc1dGSXlhRTVXTW5SWFdWWk5lVlJZYUdwU1YxSm9WV3BLYjFReFVsWldia3BzVm14d01GUldVbE5oUjBwWFYydHNWMUp0YUhaV2FrWnJVMFpXY2s5V1drNVNNVVYzVjFkd1IxWXlVa1pOVmxaV1lrZG9WRmxzYUc5T2JHUlhWbXhrVlUxV2NFZFVWbHByVmtkS1NHRkdiRnBXUlZwb1dWVmFjMk5zWkhKa1IzUlRZa1p2ZUZkVVFtRmtNVmw0VjI1V1VtSkZXbGxXYlhoaFkyeFdObEpyT1ZkTlZYQXhWa2Q0WVdGV1NYbGhSbXhZVmpOb2FGVXljM2hqTVdSeVdrWm9hVlpXY0ZwWFYzaGhXVlpPUjFkdVVrOVdWR3hoVm0xMGQwMUdiRlpaZWxaWFZteHdSMVl5ZERSV01rWnlWMjFvVjAxR1ZqUldiRnBYWkVkT1JrNVdUbE5XVjNRelZtMHhkMUl5U1hsVVdHaFdZbXMxV1ZsclpHOVdNV3h5V2taT1YySkdjSGhXUjNoUFZHc3hWMVpxVWxkTmFrWklWakJhUzFaV1duTmpSbWhvVFZoQ2VWWnJaRFJaVjFKSVZXcGFWR0pIYUZoWmExcDNWbFphY2xWclpHaE5hekUwVjJ0b1QyRkdTbk5qUnpsVlZqTm9URmxxUm1Ga1IwNUdUMWRzVGxaVVZrbFhWbEpQWXpGU2MxZHNiRlppUmtwV1ZtcE9VMkZHVlhkWGJYUnFZa2RTZVZReFdtOVZNa1Y2VVd4b1YySlVSak5XYWtaYVpWWk9jMkpHV21sV01taGFWbTB4TkdReVZuTlhia1pUWW0xU1ZWWnRlR0ZsYkdSeVdrYzVWV0pWY0VkWk1HaGhWakpLUjFOclVsaFdiSEI2Vm1wR2EyUldVblJpUmxKVFYwVktZVll4WTNkbFJsVjVWR3hrVjJKc1NuTlZNR1JUWXpGV2RHVklaRlJXYkVwWFZsZDRhMWRHU25KalNIQmFUVWRvTTFZeWMzaFNNV1IxVjJ4a1RsSnVRbTlXVnpGNlRWWmtWMXBJVG1wU2JWSndWVzE0Y21ReFduTmFSRkphVm1zeE5WWlhlRzlXVjBWNVZXMW9WbUpHU2xoV01GcFRWMFV4V0U1WGVGZGlTRUkwVmxjd2VGSXhaSE5YYmtwT1ZrWktWMVJXWkc5a2JGcHpXa1YwYW1GNlZsbFVNVnBoWVZaa1NHRkhPVmRoYTBwb1dYcEtUbVZHY0VsVGJYUlRZbFpLV1ZkWGVHRlRNRFZ6VjI1R1ZGZEhhRlJVVmxwM1pWWlNWMWR0ZEdoV2EzQklWVEo0YzFkc1drWmpTRnBYWVRGd2VsWnNXa3RqYlZKSVpFWmthRTFZUVRKV01WcFhXVmRSZUZkWWFGUmlSbHBZV1ZSR1MxZFdiRlZTYTNSVVVtMVNXRmRyVlRGaVJrbDNWbXBhV2sxSFVuWldWRXBIVG14YWMxRnNaR2xYUlVwUlYxZHdSMkV4V1hoYVNGWlRZa1UxY0ZaclpEUmxWbHBIVjIxR2EwMUVSa2hXYkdoellrWktObUpIT1ZaaVdGSXpWRlZhYzFac2NFWmFSbWhwVmxaWk1WWnNZekZaVm14WFUxaHdhRkpGTlZoVVZXUlRWMFpXY1ZOck9WUlNNVnBJVmtjeGMyRkZNVWxSYTNCWFlsaFNWRlZxUm5OV01WWlpZVVphYVdGNlZscFhWekV3WkRKT1YxWnVTbGhpVlZwWlZXMTRZV1ZHV2toTlJGWlhUVVJHV0ZVeWVHOVdNREZ4VWxoa1YxWkZSalJXYlhNeFYxZE9SMXBGTldoaE1XdzJWbTE0VTFJeFpIUldibEpUWVRKU2NGVnRNVzlYUmxKVlUyMDVUbUpIVWxsWk1GWXdWbFV4Y2sxVVVsZGlWRlpRVmpCa1MxTkdWbk5pUmxwb1lUTkNNbFp0ZUdGWlZrbDRXa2hTYTFKc2NFOVdha1pMVG14a1dHUkhSbHBXYlZKSlZUSjBZVlF4V2paaVJtaGFWak5TVEZkV1dsTlhSMVpJVW0xMFUxWkdXbHBYYTFaaFlURlNjMWR1VW10bGEzQllXV3RrVWsxR2JGVlNiVVpYVFZkU01WWkhNWGRXUmtwWlVXeG9XRlp0VVhkWFZscHJVakpLUlZkc1VtaE5iRXBXVmxkd1FrMVdUa2RYYTJoT1YwVTFXRlJYZEZkT2JGWllaVWhPVjAxcmNGcFpWV2hIV1ZaYVYxWllhRlpOUm5CVVZqRmFkMUpyT1ZkYVIyeFhZVE5DV2xacVJtdE5SMFY0Vmxob1lWSlhVbkJWYlRGdlkyeFdjMkZHVGxoV2JGb3dXbFZrUjFSc1NuVlJhMlJhVmxkUmQxbFdXa3BrTWs1R1lVWmthVmRGU2xsV01WcGhXVlprUjFadVNtaFNiVkp2V1ZST1ExUldXbGhqUlhSVVRVUldlbFpITlU5WFIwcFlaVVpzVm1KWVVqSmFWbHBoWkVVeFdWcEdVazVXVjNjeFZtdGpNVlV4V2xoU1dHaHFVMFUxVjFsc1VrZFdSbXh4VW01T1YxWnJjREZYYTFwaFZqSktWMU50UmxoV1JVcFlXVlJHVm1Rd01WbFRhelZYVW14d1dGZFhlRzlWTWxKellrWmtXR0V6VW5GWldIQlhWMnhXV0dWSVpGZE5WWEJYV1dwT2QxWXlSbkppZWtKWVZtMVNVRlpxUmxOa1ZrcHpWMjFzVTAxVmNGRldiVEYzVkRKSmVGcElUbGhpUjJoelZXNXdjMk5HVWxkYVJrNVVVbTFTZVZadE1EVmhWa3B5WTBod1drMUhVa2hXYWtwR1pVWmtkR0ZHVmxkU1ZuQTJWMVJHWVZNeVRYaGpSV2hxVW0xU2NGVnNZelZOTVZweVZXdGtXbFl3VmpSV2JHaHpWa2RGZUdOSVJsWmlWRlpFVmpCYVYyUkhWa2xhUjNCWFlrVndObFl5ZEZkTlJscEhVMjVLVDFkSGVHRldiRnAzWVVac1YxZHJjR3hpVlZwSlZERmFhMkZXWkVoaFNHeFhZVEpTTmxwVldscGxSbkJKVm14V2FWSXhTbHBXVjNCTFlqRmFWMWR1VWs1V1JrcHlWRmQ0WVZkR2JISlhiVVpZVWpCd1dsWlhlR0ZYYlVWNFkwaHdWV0pHY0hwV2JYaFhZMjFTUjFwRk5XaE5NRXBZVm14YWEyUXhWWGhYYmxKVVlrWmFWRmxyWkc5WlZuQllaRWRHVlZKdVFraFdNbk0xWVdzeFZsZHVjRmhoTWxKNlZtcEtSbVZzUmxsaVJtUm9ZVEZ3YjFac1VrZFNiVlpIWTBWc1ZHRjZWbGhXYWtaTFYyeGtWMVZyZEdsTmF6VjZWbTAxUjFWdFNsWlhiVVpYWWxob00xUlZXbkpsYlU1R1drWmtVMkpJUWpaWFZFSmhZekZzVjFOc2FGVldSVnBZV1d4b2IxUkdiRFpUYXpsVFZtdGFlbGRyV210VWF6RjBZVVphVjJKVVJUQlhWbHB6VmpGd1JtRkdUbWhOV0VKWVYxZDBZVmxYVGtkV2JsSlBWbFUxY0ZSV1duZFdiRlpZVFZSQ1YwMUVSbGRVYkZaelZqRlplbFZ1U2xkaVIxSklWRzE0WVdNeVJrZGpSMnhZVW10d1RsWnRjRXRPUm14WVZXdG9WV0V4Y0hKVmJGSlhWa1pzYzJGSE9WaFdiSEI0VlRKd1EyRlZNVmRXYWxaV1RXcFdURmxYZUV0amJFNXpZVVp3YVZKcmNFbFhhMlEwWVRGWmVGcElWbFZpV0VKd1ZUQldTMU5zV2tWU2JYUk9VakJhV0ZaSGRHRldSMHBKVVd4c1dtRXhjR2hhUjNoelZsWktjMWR0ZUZkaGVsWTFWMWQwWVZNeVJrWk5XRkpvVW0xNFdGWnFUa05WUm14eFVtMUdVMDFYVWpGVmJYaFRZVVV3ZUZOdWFGaFdNMUpYVkZaa1YxWXlTa2xUYkdocFYwWktkbFp0TVRCak1EVkhWbTVPYUZJelVsbFZiWGgzWld4VmVXUkVVbGRpVlZwNVZqSXhSMWxXV2xkalJtaGhVbXh3VUZsNlNrZFRSMHBIVkd4a1UySkhPVFZXYlhCSFdWZEplVlZZYUZoWFIyaG9WVzB4VTJGR1ZuUk5WazVYVFZkNFZsVXllRTloYlVwSFUyeHNZVkpYVWtoV2ExcExaRWRXU1dKR2NGZFdiSEI1Vm0xd1IxTnRVWGhYYmtaV1lraENUMVZxU205VlZscDBUVWhvVkUxV2NGaFZNalZQVm0xS1ZsZHNhRlZXUlhCMlZHMTRZV1JGTVZWVmJXaE9ZWHBGTUZac1l6RlZNa1pIVTI1S1QxWnRhRmRaYTFwM1RXeFNXR1ZIUm1wTlZscDVXVEJWTVZZd01VaGtla0pYWVd0YWRsbHFSbXRTTVhCR1lrWkthVlpIZUZoV1JsWmhXVlV3ZUZwR1pGaGlhelZaVldwR1MxTldWblJOV0dSb1ZtdHdlbGt3VWxOV01WbzJVbFJDV2xaRmNFaFpNbk40VjFaT2MyRkhhRTVpUlhCWVZtdGFZVmxYVVhsVWJrNXBVbXh3YUZWdE1WTmpWbEpYV2taT1RsSnNXakJhVldRd1lVWmFjbUpFVGxWaE1tZ3pWakJrUzFJeFpIUmhSbVJwVmtWYVdWWlhjRXRVTVVweldraFNVMkpGTlhCV2FrcHZXVlphYzFwSVpGVk5hMncwVm0xMGExZEhTbk5UYms1V1lXczFWRlpxUmxOWFIxSkpWR3M1VTJKSVFscFhiRlpyVFVaWmQwMVlTbXBTUlVwWVZtNXdWMVZHV1hsTlZWcHNVakExU2xrd1dsZGhWa3AxVVd4V1dGZElRa3hWYWtaTFkyczVWMXBIYUZOTmJtaFZWMWN4TUZOck1YTlhXR2hXWVRBMVlWWnFRbk5PUm1SeVlVVjBWV0pHY0ZsV1YzaFhWMjFGZUZkcmVGZE5SbkJVVmpCVk1WZEZPVmhoUms1cFUwVkpNRlpzWTNkbFJrbDVVbTVPV0dKck5WbFpiVFZEV1ZaU1ZscEdTazVTYlhoWFZteG9iMWRHV25KWGJuQldUVzVvY2xaSGVGcGxWbTk2WTBaa1YwMHdTa2xXYTJONFZqRlplRlp1VG1sU01uaFVXVmh3VjJSc1drZGFSRkpVVFd4S2VsWXllRzlVYkZwSFUyeFdWVlpzY0ROVk1GcGFaVlUxVms5WGFGTmhNMEpZVmtkNFlWWXhXbGRYYms1cVVrVTFWbFpzV25kV1JscHhVbXhrYWsxV1NucFhhMlJ2WWtkRmVHTkdiRmRoTVhCb1ZsUkdWbVZHWkZsaVJsSm9UVzFvZGxaVVFtRmtNV1JIWWtoS1lWSnJOVlJVVm1oRFYwWlplV1ZIZEdoaGVrWjVXVEJXYjFkck1VaFZibkJYVFVad1RGa3lNVXRTVm1SeldrVTFWMkpyU2xwV2FrWmhXVlprZEZac1pGWmlhelZvVlcxNGQyTkdiRlZVYTA1WFRWZFNXVnBGWkRCV2F6RlhZMFZvV21FeWFFeFdha3BMWkVaV2MyRkdWbGRpU0VGNlZtMHhORlp0VmtoU2EyaHJVbXhhVDFadE1UTmxiRnAwVFZoa1YwMVdjSGxVVm1oWFZtMUtjbU5IUmxkaGF6VjJWa1ZhV21ReGNFWmFSazVPWVRGd1NWWnRNVFJoTVZKeVRWVmFhbEpZUWxoWmExcExVa1prVjFkdGRHdFNiRnBhV1ZWa2QxVXhXblZSYlRsWFZqTm9WRmw2U2s5U01WcDFWRzFvVTFaVVZsRldiVEI0VlRGa1IxZHVVazVXVjFKdlZXeFNSMWRHVlhsalJVNVhZbFZ3VmxadGVFTldNREZJVld0NFZtSllhSEpaZWtwSFVqSk9SMXBGTlU1V1dFSlBWbXBHVTFNd05VZFhXR1JQVjBVMVZWbHRkSGRqYkZaeFZHdE9hVTFZUWxsYVZXUkhWMFphYzJKRVZtRlNWMUpJV1ZaVmVHTnNaSE5oUmxwT1lXeGFVVmRXWkRSVE1sSklWbXRrYUZKc2NIQldNR1J2VkZaYVYxVnJaRlpOVm5CNlZqSjRjMkZHU25KT1ZUbFhZV3RhVEZSc1dtdFdNVnAwWkVVNVUySkdXWHBXUmxwWFlUSkdjMU51VW14U2JXaFhXV3hTUjFVeFVsWlhiR1JQWWtWd2VWUXhXbXRVYkZsNFUxaG9WMkpIVGpSVVZWcFdaVlphZFZWdGVGTmlWMmhaVm0wMWQxSnJNVWRqUlZaVVlrZFNjVlJXWkZOWGJHeHlWbFJXVjAxV2NGWldiWGh6VjBaWmVtRkdhRmhXYlZKWVZtcEdhMWRYU2toa1JrNVRZVE5DV2xZeFdtOWtNVWw0V2tWa2FFMHlVbTlWYkdoVFYwWlNXR1JJWkZSU2JYUXpWbTB3TlZkSFNsZFhibXhYVFdwV1RGWXljM2hrVmxKVlVteGthR0V4YjNwV1ZFSnJVekZKZUZWdVNrOVdWRlp2V2xkNFIwMHhXblJOU0dSc1VsUldTRlpzYUc5V1ZtUklWV3hDVjJKSFVsUldNVnBhWkRGd1NFOVdhRmRpUjNkNlZqSjBVMVV4V1hoVGJrNXBVa1UxV1ZsVVNrNU5WbHB4VW0xR2ExSXhXa3BaYTFwclZHMUdjMWR1YkZkaGEwcG9WWHBLVTFOR1duSmlSMnhUWWxaS1VGZFdaRFJaVjFaWFYyNUtZVk5JUW5OVmJURlRWMFpXZEU1Vk9XaFNhM0F3Vmxkek5WZHNXWHBoUjJoaFZteHdhRmw2UmxkamJIQkhZMFprVGxKR1dURldhMlEwV1ZkTmVWSnNaRlJpYkVwdlZXNXdjMVpzV25STlZ6bFRVbXh3ZWxZeU1VZGhhekZYVjI1c1ZrMXFSVEJXVkVwTFUxWkdXVnBHWkdoTmJFWXpWakZhYTFJeFNYaFVibFpXWWtad2NGVnRkSGRYUm1SWVpFZEdhMDFFUWpSWmEyaEhWVEpLVmxkdVJscGhNWEJvV2xaYWQxSnNaSEpQVmxacFVtNUJkMWRyYUhkUk1WbDVVbGhzVlZkSGFGaFZhMVozVTBaYWNWSnJPV3RXYXpVd1dUQmFUMkZXV1hsaFJteFhUVmRSZDFsVVNrcGxSazV5V2tab1dGSXlhRnBYVjNodlZURmtWMVp1UmxOaVZWcFZWVzE0ZDFOV2NGWldha0pYVmpCd1Ixa3dWbTlXTURGMVZXNXdWMDFHY0doVmJYaFBaRWRHUjJOSGFHaE5NRXBLVmpKMFYxbFdiRmhWYkdSVlltczFiMVZxU2pSV1JsSllUVmM1V0ZKc2NEQlVWV2h2VkRGSmVGSnFWbFppV0ZKeVZqQmFhMU5IVmtsVWJGcE9VbXhXTkZacVFtRmpNazV6WTBWa1ZXRjZWbFJaYTFaYVRVWlplV1JIY0U5V2JHd3pWRlpXVjFVeVJYcFJiR1JYWVdzMVZGcEhlRnBrTVdSMFVteE9hVkpVVlhoV2FrbDRVakZWZUZOc1pHcFNNbWhaV1d0YVlXRkdiRlZTYlhSWVVteEtlVmRyV205aFZsbDZZVVpXVjFKdFRqUlpha1pyVmpGa1dXSkhlRk5OTVVwUVZsY3dlRTVHWkZkWGEyaFBWbFJzV0ZSWGRIZGxWbGw1WlVaa1dHSkdjRWRVYkZwVFZqSktSMk5IYUdGU1YxSllWVzB4VTFOSFZraGlSazVwVjBkT05GWnRkR0ZaVjBsNFZWaG9XR0pyY0U5V2JGcGhWa1pzY2xwR1RscFdiRXBYVmpKME1HRkdTbk5qU0doV1ZtMW9kbFl3V2t0ak1XUnpZMFpvYUUxWVFqSldiWEJMVXpGWmVGUnVUbFppUjJodlZGWldkMUpHWkhOV2JVWmFWakF4TlZaSGRHRmhSa2w1WlVaU1dsZElRbGhXYkZwclYwVXhWVkZzVWs1V01VcEpWbXBHYjJJeGJGZFRhMlJVWWtkU1ZsWnFUazlPUmxKelYyeGFiRkl3V2tsVU1XUnZWakpGZWxGWVpGaGlSbHAyVldwR1lXUkdUbkpoUmxwcFVtdHdXVlpHV21Ga01rWkhZMFZhWVZKdFVsVldiVFZEVTBac1ZsZHRkR2hXYlZKSVZXMXdZVll5U2xWUmFrNWhWbFpXTkZWcVJtdFhWbkJHVGxab1UxZEZTalJXYkdOM1pVWlZlR0pHWkZaaVJuQlpXVzB4VTFReFVsZFhiazVQVm01Q1YxZHJWbXRXTURGRlVtNXNWV0pHV2pOV2FrRjRaRmRHU1ZOc2NGZFdNVXBJVjJ4a05GSXlUblJUYTJSb1VtMVNWRlpxVG1wa01WcDBaRVpPVTAxVk1UVldWM1JyVjBkS2NtTkhhRlppVkVaMldUQmFZV05XVW5SUFZtaFhZa2hDV2xkc1ZtdFNNa1YzVFZaa1dHSnVRbGhVVjNCWFZVWmtWMWRyT1ZSU2JGcDZWbTE0VjFZeVNrZFhWRUpYVWpOU2FGWnRNVmRUUmtweVlVWkNWMDF0YUhkV1YzaHZVVEZrYzFkdVRscE5NbWh3VkZaYWQwMUdWWGxrUjNSWFVqQndTVmxWV205V2JVVjRWMjFvV2xaV2NIcFViWGhQWTJ4d1IxUnRiRk5XUmxreFZtdGtORmxYUlhsU2JHUlZZVEZ3VkZsWGN6RlhSbXhWVW01a1dGSnRlSGhWTW5SM1lrWmFjbU5HY0ZoaE1WVjRWbXBLUzFOV1JuVmFSbVJYVFRGS2IxWXhXbUZYYlZaSVUydHNWR0pWV2xSYVZ6RTBaVlprV0dSSFJtdE5iRnBZVmpGb2MxUnNXa1pUYkdoV1lsaFNlbFJVUmxwbFYxSklUMVpvVTAxR1dUQlhWRUpUVkRGa2MxZHVUbXBUUlhCWFZGVmtVMU5HVlhkV1ZGWlhUVmhDU1ZscldtOVZNVnBaVVd0MFYyRnJXblphUkVaT1pVWldkVlZzWkdsU01VcFdWMWN4TUdReVNYaFdibEpyVWxoU1dWVnRNVFJsYkZsNVpFUkNWMDFXY0RCV1YzaHpXVlpLVjJOSVNscFdSVVkwVm1wS1MxSldWbk5hUlRWcFlsZG9OVlpxUm1GWlZrMTRVMjVPVldKcmNGRldiWGgzWWpGc1ZWRnVXbXhpUm5CV1ZWY3hSMVl5U2xkWGJHUlZZa1p3YUZaVldscGxWMFpKVVd4YWFWSnJjRmxXVkVvMFlURlplRmR1VWxOaVYyaFBWbTB4TTAxV1dsVlRWRVpYVFZaYU1GVnNhSE5XYlVwWVlVWmtXbFpGV21oWlZWcHpWbXhrYzFwSGNFNVdNVW8xVjJ0V2EyUXlSbGRYYkZaWFlUTkNXVmxVUm1GV01WSlhXa1ZrVTJGNlJrcFhhMXBUWVVVeGRHRkdiRmhXTTJoMldXcEtUMk14Vm5WVGJVWlRWMFZLZWxadE1UQmtNbFpYVjFoc2FtVnJXbGhVVjNSM1YyeHNWbGRzVGxoU2JHOHlWVmR3VTFaWFJYaGpTRXBXWVd0YVdGbDZSbmRTTWtaSVlrZHNWMkV6UVhsV2JYaHFaVVUxUjFwSVNrNVhSVFZZV1cxNFMxUXhXbk5hUms1WVVteEtWMVpYZEd0WFJscHpZMFpzV2sxR1duSldha3BIVG14S2NWSnNjRmRXYkhCVlZtMXdTMUl5VG5SVWExcHNVbXh3YjFsVVRrTlZWbHBZWTBWMFZFMVZiRFZWYlhScldWWktWVlpyT1ZkaVIyaEVWRmQ0WVdSRk1WbGFSbEpPWWtadmQxWnRNVEJoTVZwSFdrVm9hRkl5YUZkVVZWcGhUVEZzY1ZKc1pHcFdiRXA2VmtkNGExVXlTa1pqUm1oWFlXdHJlRmxVUm10U01XUjFWRzF3VTFZeWFGcFhWbEpMWWpBd2VHSklTbGhoTTFKWVZtMTRkMlZzYkZaWGJYUm9WbXh3U0ZZeWVGZFhSbHB6VTJ0b1YxSkZXa3haTW5NeFZqSkdSMVJ0YkZOTlZYQXpWbTF3UTFsV1RYZE9XRTVZWVRKb2MxVnFRbUZqVmxKWFYyNWtiR0pIVW5sWlZWcFBWbXhLYzJORVFscFdWMmhFVm0weFMxWldXbkpWYkZwT1VtNUNlVlpxUW10VU1VcHlUMVpvYTFKVVZsaFpiWFJMVjJ4YWRHTkZjRTVXYkVZMVZXMDFUMVpYUlhoalNFWldZV3RLYUZsVldtRmpWbEp6Vkcxb1UySllhRmhXYWtreFlURlZlVk5yYkZKaE1taFlWV3BPYjFaR1dsVlJXR2hVVm10YWVWbFZXbXRWTURCNVlVYzVXRlpzU2t4VmFrWmFaVWRPUmxkdGFGTmlTRUpaVmxkNGIxRXhaRmRhUm1oc1VucHNWMVJYZEdGVFJtUnlWMjEwV0ZJd2NFcFZWelZQVmpKS1dWVnFUbGROYm1oNlZtMTRkMUpzY0VkWGF6VlhZbGhqZUZZeFdsZFpWbGw0V2tWa1dHRnNjRlJXTUdSVFlVWldjbFp0UmxoU2JGcDRWVzB4TUdFeFduTlhibXhWWWtad2NsbHJaRXRYVjBaSVQxWmthVlpGU1hwWGJGWldUVlpKZUZwSVZsVmlSMUp3V1d0V2QxVldXblJqUlRsV1RWWndlbGxyV25OaGJFcFlWV3hzVjJKVVZrUlZha1poVjBkV1NHUkdhR2xTYmtJMlYxUkNZV014WkhOWGJHUnFVbFpLV0ZsWGRHRlVSbFowVFZVNVUySldXa2hXTWpGelZqRktWMk5HU2xkaVIxRXdWMVphVG1WV1VsbGlSazVvVFcxb2RsWlhlRk5XTVdSWFZtNU9WMkp0VWxkVVZscDNaVVpXZEUxVlpGZE5SRVo1Vm0xd1UxWXdNVmhoU0hCWFlrWndjbFV3WkVkVFIwWkhWMnMxVTJKR1dUQldNVkpIV1ZaWmVWVnJXazVXYldoUlZtcE9RMVpHYkhKWGJscHJUVmRTZWxadE1EVmhSVEZ5VjJ4a1ZWWnNjSEpaVjNoUFUwZFdSMkZHWkdoaGVsWlZWMVJLTkZkdFVYaGpSVnByVW0xU1QxWnFSa3RPVm1SWFZtMUdhRTFXVmpWV2JUVlBWMGRLU0dWR2FGcGlSMmgyV1RKNFYwNXNTblJrUm1ST1ZsaEJlRlpyWkRSWlYwWlhWR3RhVkdKdFVsaFdhazVEVkVac2NWRllhR3BOVjFJeFZXMTRUMkZXV2xkalNGcFhVbXh3Y2xaVVJrOVdNV1IxVlcxMFUyVnRlRmhXVnpFMFpESldjMkV6WkZkV1JscFpXV3RrVTFOc1ZsaGxSemxYVmpCd1dsbFZhRXRXTWtwSFkwVm9XbVZyV2pOVmFrWjNVbXMxVjFwSGJGTmlXRkV3Vm0weE5GVXhUWGROVldoVlYwZG9XRmx0ZUV0V1ZteDBaRWhrVmxKc2NEQlVWbHBQVjJ4YWRHVkliRmROYmxGM1ZqQmFTMk14WkhWaVJtUk9ZbTFvYjFkWGRHRlhiVlpIV2toS2FWSnNjSEJXTUdSdlRXeGFjMVZyU214U2JHdzFWa2QwWVdGV1NuUlZiVGxWVmpOTmQxUlZXbXRYUjA1R1drWm9hVlpzY0ZsV1ZFbzBZekpHVjFOWWNGWmlhelZoVm10V1MwMHhXWGhYYlVaclVqRktTRmRyWkRCaFIxWnlWMnRzV0ZaRlNsaFdha1pXWlZaT2MySkdXbWxTYTNCWFZtMHdlRlV4V2tkVmJHUllZbFZhV1ZWcVJtRlRWbFowWlVkMFZXSkdjRnBWVjNodlYwWmFSbE50YUdGU1JWcGhXbFphVDJNeFduTlViR1JUVmxoQ2RsWnNaREJXTWxGNFZtdGthVkpHY0ZSWmJGWmhZMnhhZEdSSVpHeGlSbkJKVkZab1QxZEdTbkpqU0d4YVRVWktXRlpxU2t0V1ZrWnhWVzFHVjAwd05EQldha0poV1ZkU1YxVnVVbE5pUmtwVVZqQldTMlJzV25OVmEwNVhZWHBHV1ZVeGFHOVhSMHB6VTI1T1ZrMUhVbFJaZWtaaFpFVXhWVkZyTlU1V01VbzFWbTB3ZUUxR1dYZE5WVlpUWW0xNFlWUlZXbmRoUmxwMFpVWndiR0pGV25wVlYzaHZWakpLU1ZGdE9WZGlXRUpNVmtSR1NtVkhUa1poUms1cFVqRktXVmRYTVRCVE1EVlhWMWhzYTFJd1dtRldiWGhYVGxaYVIyRklUbFpOYTFZMVdWVmpOVlp0U2tkVGJHaGFUVVp3YUZreFdrOWtSVGxYVjJzMVYySnJSak5XYTFwWFlqSkplVkpZWkU1V2JWSlVXVmQ0UzFkR2JISmFSemxzWWtad2VWWXlNVEJXUmtsM1YydHdWbFl6YUdoV1IzaExZekpKZW1OR1pHaGhNWEJ2VjFod1MxVXhTbkpOVm1SaFVteGFjRlZxU205WFZtUllaVWM1YVUxRVZsaFdNalZIVmtaYVJsZHRPVlZXYlZKVVZUQmFWbVZWTlZaUFYyaHBVbGhCZDFkc1ZtdGlNVnAwVTJ0a2FsSllhRmRaVkVaM1dWWndSVkp0ZEdwaVZUVkpXa1ZWTVdGSFZuTlhhMnhYVFZad1dGZFdaRkpsUmxaMVZHeFNhV0pHY0ZSWFZtUTBaREZrUjJKSVRtaFNWVFZWVlcxNFdrMXNWWGxqZWtacFVtdHdlbFV5Y0VkV2F6RnhVbTVhVjFaRmNFeFdha1pQWXpGR2MyRkdaR3hoTUd0M1ZqRmtkMU14VG5SV2EyUmhVMFphVjFsc2FFTldSbGwzVjJ0MFYwMVdjRWhXTW5ocllUQXhSVkpyYUZkTmJtaDJXVlJHUzA1dFNrZGFSbFpYVFRGSmVsWlVSbUZaVm1SSVZHcGFWMkpIVWxoWmEyTTBaVlphV0UxRVJscFdiR3d6VkZab1YyRkdTWGRYYldoWFlsUkdWRlpyV2xaa01XUnlaRWR3VG1GNlZrbFdNblJXVFZaWmVGZHVVbXRTUlRWWVdXeG9iMVpHVm5GVGEzQnNWbXMxV2xscldrOWhWMFkyVm14YVdGWXpVbkpaYWtaYVpVZEtTVk50UmxOaGVsWm9WbTB3ZUU1R1duTldibEpQVmpOU1dGWnRkSGRsYkd0M1lVaE9WMDFFUm5oVmJYUnZWMnhaZWxScVVscE5ibWh5V1RKNGQxSXhjRWRVYXpWT1lsZG9ZVlp0TVRCaE1EVkhZa1pvVm1KSFVsUlphMlEwWVVaV2RFMVdUbGRTYlhoNVdWVldUMVl4V25OalJtaFhWak5SZDFaVVFYaFdhelZXWVVaa1UyVnNXbEZXTVZwaFV6SlNTRkpyYUZCV2JGcFlXbGQwWVUxc1duRlNiVVphVm10c05GZHJhRk5oTVVsNVpVVTVXbUV4Y0ROVWJYaGhZMVpPVlZKc1ZrNVdNMmhaVmxSS05HTXhXblJUYmtwWVlrWndXRmxzYUc5V01YQldWMjVrV0ZJeFdrbFZiVEV3VlRBeFYyTkZkRmROYmxKb1dWUkdVMk14WkhOaVJrcHBVMFZLV1ZaWGRGZFRNbEp6WWtaV1UySklRbk5XYlhSM1RWWlZlV1ZHVG1oV2JHdzFXVlZrYjFkSFNraFZXR1JoVWtWYVdGVnFTa3RTVm1SelZHMXNXRkpyY0RWV2JUQjRaV3N4VmsxVlpHcFNWbkJaV1Zod2MySXhXblJsU0U1UFZtMTRWMVl5Tld0V01ERkZVbXhzVjFadGFISldNRnBoWkVaV2MxUnRSbE5TVlZZMFZtcEdZVlV5VFhsU2EyaHBVakpvVDFZd1ZrdFhSbHAwVFVob1RsSnNiRFJaYTFwdlZrWmtTR0ZHWkZwaE1sSlVWakZhYzJSRk1WZFViR1JYWWtoQmQxZHNWbUZoTVZGNFYyNVdVbUV5VWxsV01HaERWMFphY1ZGWWFHcGlWVFZJVjJ0YWQxUnNTbk5qUkZwWFlXdHZNRmRXV2xwbFZsSnlZa2R3VTJKV1NsQlhWekI0WWpKSmVGZHNhRTVXUmtwdlZGZHpNVTFHV25Sa1IzUmFWbXRzTlZsVlZUVldNREZIVjJ0MFZWWXphR2hhUldSUFVteFNjMXBIYkZkaVNFSktWbTF3U2sxV1ZYaFhibEpUVjBkNFYxbHNaRzlXTVd4eVYydDBXRkpzYkROV01uaFBWakF4VjJORVJsZFNNMDB4VmxSS1MxTkhValpSYkdScFVqRkdNMVpyVWtkaE1rMTRXa1pzWVZKdFVtOVphMVozVjFaYVIxZHRkR2xOYkZwNlZqSTFTMWxXU2xsVmJGWldZV3RLYUZVeFdsSmxSbVIwVW0xb1UxWkZXbUZXVmxwdlpERlplVkp1U2xoaVYyaFpWbTB4VTFaR1ZYZFhiVVpxWWxWd1NWVnRlRTlVYlVwWVlVWmFWMDFYVVhkWFZtUlBaRVphYzFwR2FHbFNNbWhRVmxSQ2EySXhXa2RWYkdoclVtMVNVRlZ0ZUZkT1ZsSnpWbFJXVjAxVmJETlpNRkpEV1ZaYVYyTkljRmROYm1ob1ZXMTRhMk5XVW5OalJtUlhZbXRKTWxadE1YZFNNa1Y1Vkc1U1ZtRXlhSEZWYkZKWFlqRndXR1ZIUmxSaVJtdzBWMnRTUTFkc1dYZFdhbFpXWWxob2NsZFdXa3RXTWs1SFZteHdXRk5GU2tsV2FrWmhXVmRPVjFWdVNsVmlSa3BVV1d4YVMxZFdXbkZUYWxKclRXdHdTRlV5TlZkVmJVVjZVV3hvV21KSGFIWlpWVnB6Vm14d1IxcEhjRTVXTVVvMlYxZDBZV0V4V1hsV2JrcFhZV3MxV1ZsVVJrdFVSbHB4VW10d2JGSnVRa3BWTWpGSFZUQXhSMk5HV2xkV1JVcFlWWHBHVjFJeFpIVlZiWEJUVmpGS2FGWnRjRWRaVjFaelYxaG9hRko2Ykc5VmJYTXhVakZTYzJGRlRsZGlWWEJhVmtab2IxWnRSbkpYYkZKYVpXdGFlbFJ0ZUdGak1YQklZa1prV0ZKVmNHOVdiVEUwWVRKUmVGVllhRmhYUjNoVldXdGtOR0l4VlhkaFJVNWFWbXhLV1ZSc1l6VmhiVXBKVVd0a1YySkdTbGhXYWtGNFYxWkdjbUZHYUdoTmJFbzJWbTEwWVZNeFduUlVhMmhUWWtkU2NGWXdaRzlXVmxwWlkwVktUbFpyTlVoVk1uaHpZVVpKZVdWR1VscGlSbkJNVmpKNGExZEhVa2hrUmxwT1lYcFdXVlp0ZUc5aE1WbDVVMjVTVm1KSGVGZFpiRkpHVFVaWmVGZHVaRk5pU0VKSFYydGtiMVV5UlhwUldHUllZVEpvTTFWNlJtRmtSazV6WWtkb1UyRXdjR2hXYlhCUFZEQTFSMkV6YkdwbGExcFlXV3hXWVZOR2JGWmFSemxWWWtad2VsWXhVa05XTWtwWllVWlNWbVZyV2s5YVZscFRaRlpTYzFadGJHbFNXRUl5Vm14amQyVkdWWGxVYTJSWVYwZFNhRlZ1Y0hOWFJscDBaVWhrV0dKSGRETldiWFF3WVZaS2NtTkliRlZpUmxwMlZtcEdXbVZ0UmtsalJuQlhWbTVDVFZkclZtRldNbEpYVW01T2FsSXlhRTlXYlRBMVRteGFkRTFVVWxwV01GWTBWMnRXWVZSc1duTlhiRTVhWWtkb1ZGWkVSbUZrUjFaSldrWlNWMkpJUWpSV1ZFWlRVakZWZDAxV1pHcFNWM2hYVkZjMWIxZEdiRmRYYTNSclVqRmFTRmRyV25kaFZrcHlZMFZvVjFKc1dtaGFSRVpyVTBaYWNtSkdWbWxTTVVwM1ZsZHdUMkZ0VmxkWGJsSk9Wa1pLV0ZSWGRHRlRWbHAwVGxWMFdGSXdjRWxhVlZwelZqSkZlRmRyZUdGU00yaDZXVEZhUzJSR1NuUmtSazVvWld4Wk1sWnRNSGhPUjBWNVVteG9VMWRJUWxOWmEyUTBWMVphZEUxV1NtdE5WbHA0VlZaU1IxVXdNVmhWYkhCWVlURndkbGxXV2twbFJrNTFZVVprYVZaRlZqTldNVnByVmpKTmVGcEdiR2xTVkZaWlZXeFNWMWRXV2tkWGJHUnJUVmRTU0ZZeGFHOWhSazVJVld4b1ZWWXpVak5XTW5oelZteGtjMVJzWkdsU2JUaDVWbGN4TkdJeFduUlNia3BZWWtWS1lWcFhkR0ZOTVZaeFUydGtWRkl3Y0VsWlZWVXhWR3hLV0U5VVZsZGlWRVV3V1ZjeFVtVldXbkphUm1SWVVqSm9XbGRXVWt0Vk1WbDRZa2hLV0dKVldsaFdiVEUwWld4YVdFNVZPV2hpUlhCNlZUSjRiMWRIUlhoalJrSlhUVVp3VEZsNlNrOVNNa3BJVW14T1YwMVZXWHBXYlRGM1VXMVdTRlJ1VWxWaE1sSnZWVzB4VTFReGJIUk5WemxPWWtad01Ga3dWbXRXUlRGRlZtNXdWMDFxVmt4WmExcExaRlpHYzJGR2NHaE5iV2hGVm10YVlXRXhXbGRVYkd4b1VteGFUMVpzVWxkVFJscEZVbTFHYUUxV2JEVlZNblJ2Vm0xR05tSkdXbGRpYmtKSVdrZDRZVk5IVmtoU2JYUlRUVVJXU0ZZeWRHRmtNVmw1VTJ4c2FGSnRlRmhXYTFaaFpHeHNjVk5yWkZkTlZUVjVWMnRrZDFVeVNrWmpSMmhZVmpOU2NsWlhjM2hTTVdSeVZteE9hV0Y2VmxsV2JURXdaREF4VjFwSVNsaGlSVFZZVkZkMGQxZEdWWGxsU0dSWVVqQldORll5TlV0V2JVWnlWMjFHWVZKRlJqUldha1ozVWpGd1NHRkhiRk5pYTBwYVZtcEdhMDVIU1hoU1dHeFRZVEpTV1ZsdGRHRldWbXhWVkd4T2FsWnRlRnBaTUZwclYwWktkR1ZHWkZkTmFsWnlXVlZhWVdOdFNrVldiSEJYVm01Q1JWWnFRbXRUTVVsNFdraFNhRkl3V2xSVmJGcDNZVVprYzFadFJtdE5WVFZZVmpJMVQxWXlTbGhsUmxKVlZteGFNMVJVUm1Gak1YQkpXa1pPVGxaVVJYcFdSM2h2VkRGa1IxcEZhR3hUUlhCWFdWZHpNVlpHYTNkWGJFNVhUVmRTTVZaSGN6RlViRnB5WTBac1YySlVRalJVVldSSFVqRk9jMVpzU21oaVJuQnZWbTE0WVdReVVuTlhXR3hPVmxoU1ZGUldWVEZsVm1SeVYyeGtWMDFXY0RGVlYzQmhWakpLV1dGSGFGWmxhM0JVVlRCYVYyTnNjRWRXYldoc1lrWndXbFpyV21GV01sRjVVbXRrV0ZkSGFGZFpWRUV4WWpGU1dHUklUazlTYkd3MVdrVmtNRll4U1hkalNIQlhUVzVvVUZZeU1VdFRSbFoxVjJ4a1RsWnVRbTlYYTFaV1pVWlplRlJ1VW10U1ZGWllWRlpXZDFkc1duRlRha0phVmpCV05WVnROVXRVYkZwMFlVWmtXbFl6VW1oV2FrWnpZekpHU0U5V1pGTmlXR2hZVmpKMFlXRXlSWGhUV0doWVlUSm9XRmxzYUc5amJGcFZVMnQwVjAxVmNIaFdSM2hyVkd4YWRWRnRPVmRoTVVwSVZqSXhWMVl4Vm5WVGJHaHBVakpvZDFaWGNFdGlNbEp6V2toT1drMHlhRkJWYWtaTFpXeFplVTVXVGxWaVIxSktWVmR6TlZZeVNsbFZibkJWWVRGd2FGbDZTa2RUVmxKMFlVZHNVMVl6WkRaV2JYQkxUa2RKZUZkc1pGaFhTRUpYV1Zkek1WWXhVbGRYYm1Sb1VteFdNMWRyVlRWVk1ERlhVMjV3V0dFeGNISldSM2hMWXpKRmVscEdaRTVXYTNCRlYxZHdTMVZ0VmtkYVJteHBVbXMxY0ZsVVRrTlhiR1JZVFZSQ2EwMXJXa2hXYlRWVFlrWk9TRlZzYUZaaVZFVjZWRmQ0Vm1WWFVraGtSbVJUWVRKM2VsZFVRbGRpTVZsNFUxaHdWVmRIYUdGV2JYaDNXVlp3VjFwRlpGTk5Wa3A2VjJ0a2MxWXhTbFppUkZwWFRXNVNWRlZYTVZkU01YQkdXa1prYVZJemFIZFdWekUwV1Zaa1YxWnVSbFJpVkd4eVZGWmFkMWRXVWxaaFJ6bFhZWHBHV1ZaWGVHOVhiVVY1WVVaU1dtRXhjRXhXTVZwWFpGWktjMk5IYUU1WFJVcGFWbXRhVTFJeGJGaFVXR2hYWW10d2FGVnRNVk5YUmxweVZtMUdXRlpzY0ZaVk1uQlRZVlV4V0ZWcmJGWmlSMmgyVm10a1MxSXhUbk5oUm5CWFRURkplbFpyVm1GV01rNVhWRzVLVUZack5YQldiR2hEVTFaYWRFMVVVbWhOYTFwWVZUSjRjMVZ0UlhoalJtaGFZa1pLU0ZSVVJsZFhSVEZYV2taT1RsWXhTbUZYVjNSaFZqSkdSazFZVm1oVFIyaFlWbTV3UW1WR1ZsVlRhemxUVFd0d1NsWlhNVEJWTVdSSFUyeGtWMkpVUlRCYVJFRjRVakpGZWxwR1pHaGhNSEJaVmxkNFUxSXhaRmRYYkdoc1UwVTFXRmxzVm5kWGJGcFlUVmM1VjAxcmNGWlZiWFEwVm1zeFIyTkdhRnBOYmsweFZtcEdhMlJIU2tkYVJrNXBVMFZLU0ZadGNFZGhNbEY0VTFoc1UxZEhhR2hWYlRGdlZteHNWVkp1WkdwaVJsb3dXbFZrUjFaVk1WZGpTSEJYVmpOb2NsWnJXbUZqTWs1SFYyeGFUbFpyY0VsV2JURjZaVVpaZUZkdVJsZGlSbkJQV1cxNFMySXhXbkpWYTJSYVZqQXhORlpITlU5aFJrcDFVVzA1VlZadGFFTmFWM2hyWXpGa2RGSnRkRTVXV0VKWlZsUkpNVlV4VlhsVGJHeFdZa1pLV0ZsVVJtRmhSbHB4VW0xR2FrMVlRa1pXVnpFd1ZHeGFkR1I2UmxkV1JXOTNXV3BLUm1WV1duVlRiR2hwVWpKb2FGWnRkRmRaVlRCNFkwVm9iRk5GTlhGV2JYUjNUVVp3Umxkc1RsWk5hMWt5Vm14b2IxWXlSWGxWVkVKWFZrVndTRll3V2t0WFZuQklZMFpPYVZZeWFHRldiVEYzVkRKSmVWVnVUbGhoTW1oUFZtMHhVMVpHVWxoa1JtUlBZa2RTZVZZeU1EVmhSbHB5WTBSR1ZsWjZWbnBXYWtaTFl6Sk9TR0ZIUmxOU1dFSlpWbTF3UzFReFNuTmFTRTVvVWpKNFdGWnROVU5YUmxsNFdrUkNXbFl4UmpOVVZscHJWakpLU0ZWdE9WWmhhelZVVmpGYVYyTldSbk5hUlRsVFlrZDNNVlpIZUZkTlJsbDRWMjVPYWxKdGFHRlVWVnAzVlVaa1YxZHRSbGROYXpWSVZWY3hSMVV5U2tsUmJHeFlZVEZhY2xacVJrcGxSbFoxVlcxc1UySlhhRlZXUm1ONFlqSkdSMWR1VWs1V1JrcHZXV3hhUjA1V1duUmtSemxYVW0xU1NWcFZXbTlYYlVwWlZGaG9WMDFXY0hwYVJXUlhVbTFTUjFack5WZGlhMGt5Vm0xd1NrMVhSWGxTYmtwT1ZtMVNjVlZyVmt0aFJscHpXa1pPVkZKdGVIbFhhMVl3VmtaSmVGZHJjRnBoTVhCeVZrY3hSMk14WkhWaVJtaFhZa1p3YjFZeFdtdFZNVWw0VjI1V1ZHSlhlRlJaYlhSTFYxWmFkR05GU210TmJGcElWakkxUjFWdFNsWlhiVVpYWWxoU00xcFhlR0ZUUlRWWFZHMW9VMkV6UVhkV2JHTjNUbFprYzFkcldrOVdWa3BZV1d0YWQyRkdXbk5YYTJSclVtdHdlbGt3V210VWJFcEhWbXBPVjJKR1NreFVWV1JLWlVaYVdXSkdVbWhOV0VKUlZtcENWMU14V1hoaVNFNVdZa2RTVkZWdGVIZFhSbGw1VFZWa2FFMVZjRlpWYlhoM1YwZEZlR05HYUZkU2VrWkhXbFprVW1WdFRrZGFSazVPVFcxb2RsWXhXbE5TTWtWNFZHdGtWV0pzV2xWWmEyUnZZMFpXZEdWSVpGaFdiVkpZVmxkMGExZHNXWGRYYTJoYVlUSm9TRlpVU2t0U2F6VlhZa1phYUdFeGNFMVdWRW8wWVRKT2MxcElUbFZpUm5CUFdWUk9RMU5XV25GU2JFNVRUVlpzTkZVeGFIZGhSa3AwVld4YVdtRXlVbFJWTUZwV1pERmtjazlYY0dsU01VbDNWMVJDWVZReVJsZGFSV2hvVW5wc1dGbHNVa1pOUm1SWFdrWktiRlpzV2pGV1IzaHZZVmRHTmxac2NGaFdNMmhZVjFaYVYxSXlTa2xUYkdocFlsWktVRlp0TVRSak1EVlhZMFphWVZKRlNsaFVWVkpIVjBacmQxVnJaRmRpUm04eVZWWlNSMVl3TVVkalIyaFdZbGhvY2xwRlpFZFNNV1IwWVVkb1RsZEZTVEZXYlRGM1VURnNWMVJZYkZWaWF6VnhWV3hrYjFaR2JISldWRVpWVFZkNE1GUldZelZYUjBwSFkwUkNWVlpzU2tSV01uaGhaRWRXUjJGR1pGTk5NbWg1Vm1wQ1lXRXhUa2hTYTJob1VteHdiMVJXV25kVVZsbDRWMjFHV2xZd05WaFZiVFZQV1ZaS1ZXSkdhRnBoTVhBeVdrUkdhMk14V25Sa1JUVlRZbFpLTmxacVNURlRNa1p6VTI1U2JGSXdXbGhaYTJSVFZERlNWMWR0Um10U1ZFWlhWakl4TkZVeVNsZFRhbEpYWVRKUk1GbFVSbE5qTVU1MVZteEthR0pJUWxwV2FrSnZVVEZTUjFadVJsTmhNMEp6VlcxNFlVMVdXa2hOVldSV1RWWndTRll5ZUhkV01WbDZZVVpvWVZKRlduSldha1pyWkZaS2MxVnRhR2hOU0VKYVZqRmFiMlF4V1hoYVJtUlhZbXhLVUZac2FGTldiR3h5VjI1a1RsSnVRbGRXTW5NMVYwZEtSMk5GWkZWaVJscFVWbXBCZUZJeVRrbGpSbkJzWVRGd1dWZFVTalJrTVU1SVZXdG9hVkpyTlhCWlZFSjNWMVphZEdWR1RsUk5SRVpIVkZaV2ExZEdaRWhWYXpsWFlsaG9NMVpWV21GamJGcDBVbXhvVjJKWWFGZFdWekF4WVRKR2RGTnJhR3hTYldoWVZGZHdSbVF4V2xWUldHaFhZWHBXV2xrd1duZGhSVEZaVVc1c1YySllRa2hWZWtaclZqRktjMVpzVW1sU01taDNWbGN4TkdReVNYaFhiRlpVVjBkb1dGUldWVEZUUmxwWVRsVjBXRkl3Y0ZkV01uaFRWbFphVjJORVRsZGlSbkJ5VmpCa1YxTkdTbk5WYXpWcFVsWnJkMVp0Y0VwTlZrbDRWbTVTVkdKR2NGbFphMXBoVm14YWRHVklaRTVOV0VKWldsVmFkMkpHV1hoVGEyeGhVbFp3TTFacVNrZE9iRnB5WkVaa1YySldTVEpXUjNoaFYyMVdWMU51VmxSaVIyaHdWbXBLYjJJeFduUmpSVGxwVFZkNFdGa3dXbXRXTVZwR1YyeG9WVlpzY0V4YVYzaGhaRWRPTmxKc1pFNWhNMEkxVmxSSmVHSXhXWGxUYkd4b1UwVndWbGxVU2xOVU1YQldWMjEwYTFac1ducFdSekZ6WVVVd2QxTnNaRmROVjFFd1ZtcEdjMVl4WkhWVWJHaHBZVEZ3VjFkWGVGTmpNa2w0Vm01U1QxWlZOVlJVVm1SVFpWWlplVTFVUWxkTlZYQjVXVEJhWVZkdFJYaGpTRnBYVFc1b2FGWXdXbGRrVjA1SFdrWmtVMWRGU2s1V01WSkxUa1pSZVZSdVVsUmhNbEpvVldwS05GZFdWbk5XYm1SVlZteHNOVnBWV210WGJGcHlUbFJDVjJKWVVuSlhWbHBQVW1zMVdHRkdXbWxXUlZveVZtcEdZVlp0VVhoWGJrcHJVak5TY0ZWdE5VTldNVnBYV2tSU2FFMXJWak5VVmxwdlZtMUZlV0ZHYUZkaGF6VjJXVlZhYTFZeFpISmtSM0JvWld4YVdWZFdWbUZaVjBaWFdrVm9hRkp0ZUZoVmJYaExVMFpzVlZOck9XcE5XRUpLVlRKNFExWXlTbGRUYkZaWVZteEtURlJVU2xkak1XUnlZVWQ0VTJKV1NuWldSbHBoWkRGa1YxWlliR3RTTTFKdldXdFZNVkl4YTNkWGJUbFhZbFZhZVZSc1drTldWMFY0WTBST1ZtSllhRE5WYlhoM1VqRldjMVJ0YUU1TlJXdDVWbTF3UzAxSFJYbFVXR2hoVWxkU1ZWbHJXbmRqVmxaelZXeGtXRkp0ZUZaVmJUVnJWMFpLZEZWc2FGZE5ha1YzV1ZSR1MyTXlUa2xpUm5CWFZtNUNWVmRXVmxabFIwMTRWRzVXV0dKSFVsaGFWM1JhVFd4YVIxZHRkRlZOVld3MVZUSjBhMkZXU1hwUmJGSmFZa1p3VEZZeFdtdFhSMUpJWkVaYVRsWXhTbGxXYkdRMFlUSkdSMVJyYUZaaVJuQmhXVlJHZDAweFVsWlhiVVpZVWpGYVNWUXhXbTloVmxwWFYxUkdXRlpzV2xoVWExcHJVakZrZFZSdGNGTlhSMmhZVjFaa01GbFdWa2RqUlZwWVlUTlNjVlJXYUVOVFZteHlWMjEwVmsxV2NIcFdNV2gzVmpKS1ZWRnFUbUZXVmxWNFZXcEdhMlJXVm5OYVIyeFRUVzFvV2xZeFdsTlNNbEY0Vm14a1dHSnNTazlXYlhNeFZteFNWMWR1Wkd4aVIzaFhWbTF6TlZaVk1YSmpSV3hYVmpOb2FGWnRlRnBsYlVaSlUyeGtUbUp0YUc5WFdIQkxWREZLVjFKdVRsaGhlbFp3V1d4a2IxZHNXblJOV0dSVVRWVXhOVlpITlZOV1YwVjVWVzA1Vm1KVVZrUldNRnBUVmxaS2NtTkhlR2xTYmtJMVZtMHdlRkl4V1hkTldFcFBWbTFvV0ZWdWNGZFVSbHBXVjIxR2FtRjZWbGRVTVZwcllVZEZlR05GTVZkU2VrVXdWMVprVDFZeFVuTmlSMmhUVFRCS1VGWnRjRWRUTVU1WFYyeFdVMkpVYkhGVVYzUmhVMFpWZVdSSGRGaFNNSEJKV1ZWYVlWWXlTbGxoUkU1VlZrVmFlbFp0ZUd0a1IxSkhXa1UxVjAxVmJ6RldhMlEwWVRBMVIxZFliRlJoTVhCd1ZGUktiMWRHYkhKYVJrcE9VbXh3ZUZVeWRHdFZNa1kyVW14b1dHRXlVak5XVkVwTFYwZEdSMk5HWkdsWFJVcFJWbXhTUzFReVRYaGFTRTVYWWtaS2IxcFhNVFJXVmxwSFYyMTBWazFFUmxoV2JHaHpZa1pKZWxWdE9WZGlXRkl6VkZaYVYxZEZOVmxVYkdST1ZsaENObGRVUW05VE1WbDRWMnRhYWxKdGFGaFpWM1JoWTJ4c05sTnJaRlJTTVVwSVZrZDRUMVl4WkVaVGJIQlhZbGhTYUZacVJsWmxSazVaWVVkR1UxWXhTbmRXVkVKWFpERlplR0pJU2xkV1JWcFpWbTE0WVdWR1ZsaGxSM1JWVFZad01GcFZXbXRXTURGeFVWUkdWMkZyUmpSWk1qRlBVbTFLUjFwR1pFNU5WVll6Vm0weGQxRnRWa2RVYTJSWFltczFiMVZ0ZUhkVU1WcDBUbFZPVjFadFVscFpNRll3VmxVeFZtSkVVbHBOUmxweVZteGtTMU5HVm5WUmJHUm9UV3hKTWxkc1dtRlpWMUpJVkd0YVlWSnVRbGhaYTJRelRVWmtXR1JIUm1oTmExcFlWVEkxVTFadFNrZFhiR2hWVmxkU1ZGcEhlSEprTVdSeldrZHdhVkl4U1hoV01uUmhZVEZWZVZOc2JHaFNSbHBZV1ZkMGNtVkdiRlZTYlVaWFlYcEdXRmRyV205aFYwcFpZVVpzV0ZZemFIWldWRUYzWlVaa2NtRkhlRk5YUmtwNVZsY3hORmxYVm5OWFdHeHNVakJhV0ZSVlVrTk9WbXhXWVVoT1YwMXJjRnBWVjNSUFdWWmFWMk5IUm1GV2JIQlVXVEo0YTJSSFNrZFViV3hVVWxWdmVsWnRNWGRSTVZsNFZGaHNWRmRIYUdoVmJURlRWMVpzYzFadFJsZFdiRXBaV1hwT2IxUXhTblJWYm14YVZsWlZNVmxWV2t0amJVNUZVbXhhVjAweWFESldiWGhoV1ZaS2MxcElTbXhTYkhCUFZXMDFRMlZXWkZsalJXUmFWakZLU0ZVeU5VOVpWa2w1WlVab1dtRXlhRVJYVmxwaFpFVXhTV0ZGTlZOTlJFVXdWbXBLTUdJeFdraFRhMmhzVW0xU1lWWXdhRU5sYkZsM1YyeE9WMkpIVWpCVmJYaFhWVEpLUjJFemJGZFdla1V3V2tSS1MxSXhaRmxoUmxKb1RXNW9XRmRYZUZOU01sSnpWMnRvYkZJd1duRlpiRlV4VW14WmVXVkhkR2hTTUZZMVZEQm9hMWRHV1hwUmEzaFdZbFJHV0ZacVJtdGtWbHB6Vlcxc1UwMXRhRE5XYkdSM1ZESkplRnBHWkdGU2JXaHpWVzV3YzJOR1VsaGtSMFpVVW14c05WUnNWakJYUmtsM1kwVnNWMVl6YUVSV01qRkdaVVprY1ZSc1ZsZFdia0Y2VmxjeE5HRXlUbkpQVm1SWFlsZDRWRmxzYUdwa01WcHpWV3QwYTAxV2JEUldNV2h6VlRKS2NtTklRbUZXTTFKTVZqQmFZV05zV25WYVJsSlRZa2hDTkZaWE1YcE9WMFY0VjI1S1QxWkZTbUZVVlZwM1ZVWnNWMWRzY0d4V01GcEpWVzE0YTFSc1dYaFNhazVZVm14S1NGWnFTbE5TTVZwellrZG9VMDB3U2xWV2JURTBaREZhVjFwR1pHaFRSMUp4VkZaYWQxTkdXbGhsUjNSWVVqQndNRlpYZUhOWGJVVjVWV3hTWVZac2NHRmFWbFY0VWxaYWRHRkdUbWhOTUVwWVZteGFhMlF4VlhoWGJrcE9WMFZhV0ZsdE5VTlhSbXhZWkVoa1ZWSnNjSHBXTW5Rd1ZqRmFjbGR1Y0ZwV1ZuQnlXVlphWVdOdFRrZGpSbVJPVmpKbmVsWlhjRXRTYlZaWFZXNVdWbUpGTlc5VVZtaERWVlphZEUxSWFGWk5hekUwV1d0b1QyRkdTalppUlRsYVlURndNMVJWV2xOV2JVWklUMVpXYVZKWGR6QldWekYzVkRGYVYxZHVUbXBUUlhCWVdWZDBkMVJHVlhkYVJXUlRZWHBzV0ZZeU1XOVViR1JHVTI1YVYySllRa1JYVmxwV1pVWndSbUZHV21oTmJtaHZWbGN3ZUZVeVRrZFdibEpzVTBkU1dWWnRNVk5YUmxwMFRWaGtWVTFXY0RCV1Z6VjNWakF4Y1ZacmVGcFdNMmhNVmpCYVYyTXlSa2RXYkdST1RVVndTbFpzVWtOWlYwVjRWMWhvWVZOR1NsUlphMlJUVkRGc1dXTkdaRlJXYlZKWVZtMHhSMkZGTVZkVGJuQlhUVmRvZGxaclpFWmxWMVpIWVVaa2FHRjZWa1ZXVkVKaFl6RmFWMVJ1VGxWaVJrcFVXVmh3VjA1V1pGZFdiWFJwVFZaV05GWXlkR3RYUjBwSlVXeG9WMkZyTlhaV01GcDNVbFpLYzJOSGVGTmlWa2w0Vm14amVHUXhWWGhYV0doVVlsZG9XRmxzYUVOU1JscHhVVmhrYkZKc1ducFhhMXByWVZaa1IxTnNiRmRpVkVJMFZsUkdUMVl5U2tkWGJHaHBWMFpLV1ZaR1ZsTlNNVTVYVjJ4b1QxWXdXbGxaV0hCSFUwWnJkMWR0ZEZwV2EzQkhWakl4YjFsV1NuTmpSRTVXWVd0d1NGVnFSbE5rUjBwSFZXeE9WMVl6VVRCV2JUQjNaREpSZVZWWWJGZGhNbEpWVmpCa2IyRkdWbk5hUms1WVZtMTRNRmt6Y0VkaGJGcHpWMjVzVjJKWVVYZFpWVnBMWXpKT1NXTkdhR2hOV0VKUlZtMTBZVk15VFhsVWExcHBVakJhV0ZadGVITk5NV1JYV2tod2JGSnNjSGxVYkZwellXeEtkVkZzYUZkaVZGWkVXbFphWVdSSFRrWlRiWFJPWWtad1NWWnJZekZVTVZWNVUydG9hRkp0YUdGWlZFWjNUVEZzY1ZKdFJsaFdNRFZIV2tWYVYyRldXbk5qUm14WFlrZE5lRlY2U2tkV01VNVpZMFpLYVZKcmNHaFhWM2h2VlRGU1IyTkZWbE5pV0ZKWlZXeFNSMVpzVmxobFJrNVZZa1p3ZVZrd1duTldNa1p5WVROb1ZtRnJXbWhWTUZwTFpGWlNjMVZ0YkZkV2JrSmFWakZrTkdJeVNYbFdiazVXWW10d1dWbHNWbUZXVmxaelZXeGtWMDFXUmpSWGEyTTFWbXN4Y2xacVdsWldiV2h5Vm1wS1MxTkdWbkZYYkZacFVtNUNlVmRZY0VkaE1XUllWR3RrV0dKWGVGaFVWekZ2VjJ4YWNsZHRSbHBXTVVZMVZrYzFUMWRIU25KT1ZteGFWMGhDZWxZeFdtRmpWa1owVW14U1UySklRbHBYVkU1M1VqRlpkMDFXYUZaaE1sSlhWRmMxYjAweFduRlRhM1JYVm10YWVGWkhlRmRXTWtwSlVXeG9XR0pHV21oWFZscHJWMFpPY2xwR1dtbFdNbWhRVm1wQ1YxTXhWbk5YYmxKT1UwZG9VRlZ0YzNoT1JtUnlWbTEwVjJKVmNFaFpNRnB6VjIxS1IxZHRhRmRpV0doWVdrVmtWMU5XVW5KUFZtUnBZVEJ3V1ZadGNFcE5WMFY1VW14a1ZHSnJjSEZWTUdoRFYwWlNXR05HWkd4aVIxSllWakowTUZkR1NuTlhiRnBXVmpOb00xWnFSbHBsUms1ellrWm9XRk5GU2tsWFZsSkxWRzFXVjFSdVNtRlNNRnBVVkZjeGIyUnNXa2RYYlRsU1lsWmFXRll4YUc5WlZrNUlWV3hTVlZadFVUQldNRnBoVTBkU1NHUkdaRmROU0VJMlZtcEtORll4WkhSVGEyaG9VbFpLV0ZsVVJuZGxiRnB6VjJ0MGExWnVRa2haVlZwcllWWmFjbU5IUmxkTmJsSllXVlJHU21WR1pISlhhelZYWWxkb1dGZFdVa3RpTVdSSFZXeG9UMVpyTlZsVmJYaDNWbXhWZVdSRVFtaGlWVmt5Vm0xNGQxWnJNWFZoUjJoYVZteHdURmt5TVU5U2JVcEhXa2RvYUUxWVFuWldiWGhxWlVaWmVGTllhR3BTVjNoV1dXdGFZV05HVm5SbFNHUnJUVlp3V1ZSVlVrZFZiVXBYVW1wU1dHRXlhRXhaVlZwUFUwWldjMVJzVmxkaVNFSTJWa1pTUjFVeFdYaGFTRkpyVW0xU1ZGUlZhRU5UUmxwVlUxaG9VMDFYVW5wV01XaDNWbTFLV0dGR2FGZGhNVnBvVkZSR1lXUkhWa2hrUjNCb1pXMTRXVmRXVm1GaE1WSnpVMjVXVW1FelFsaFpiR2hUWTFad1ZscEZjR3hXYTNCNlYydGFVMkZYU2tkalJsSllWak5TZGxWVVJtdFNNVlp6V2tkR1UyRXpRbEJXVnpCNFRrZFdSMVp1VW14U01GcHdWVzE0ZDJWc1ZYbGpSV1JYVFZWc05sbFZhR0ZYYkZwMFZXdDRWbUpVUmxCVmFrWkhZekZ3U0dKR2FGTk5iV1ExVm0weE5GVXhUWGhWV0doWVYwZG9XRmx0Y3pGaFJsWnhVVzFHVjFKdGVGcFpNRnByWWtkS1NGVnNiR0ZTVjFKSVdWUkJlRkpXU25KaFJuQk9VbTVDYjFkV1ZtRlRiVlp6Vm01T2FGSnNXbGhXYlhSM1UxWmFkR05GWkdwaVZrWTBWMnRvVTFVeVNraFZhemxhVmtVMVJGZFdXbXRXTVZwMFVtMXNUbFp0ZDNwV1JscFhZVEpHYzFOWWJHaFNiVkpoV1d0a2IyUnNhM2xsU0dSVFlraENSMWRyV2s5VWJVVjRZMFZzVjAxdVVuSlpla1phWlZaS1dXTkdTbWxTVkZaWlYxZDRVMUV3TlVkalJWWlRZVE5DYzFWdGVFdFhiR3h5VjJ4a1dGSnJiRFZaVlZwM1YwWmFObEpxV2xWV2JIQm9WbXBLUzFOV1VuUlNiRTVzWWxob05GWnJXbUZoTURWSVZteGtXRmRIZUZCV2FrNVRWbXhzV1dORlpGaFNiWFF6V1ZWb2ExZEdTWGRXYWxaYVZsZG9URlpxU2t0U01WcHhWV3h3VG1KdGFIbFhWRVpoVWpKTmVHTkZhR2xTYldoVVZGY3hiazFXV25STldHUlNUV3RXTkZaR2FITldWMHB6VTJ4YVdsWkZjSFpaYWtaWFpFZFdTVnBIYkU1V2EzQlpWbXBKTVdFeFdsZFhiazVwVWtaS1dGUlhjRWRUUmxsNVpVWndiRkpyTlhsWmExcHJZVlprUjFOdE9WZE5WbkJvVlhwR1lWZEdUbkphUmxwcFUwVktkbFpHV205Uk1rWkhWMnRrVjJKVldtOVVWbHB6VGtaWmVVNVdUbWhOVlhCV1ZtMTRVMWR0U2tkalJYaFdUVlp3YUZac1drdGtSVGxZWVVVMVYySllZM2hXYkdOM1RWWlJlVkp1VGxSaWJFcFhXV3RrYjFsV1duRlVhelZzVW01Q1NWcFZhRXRpUmxsNFYydHNWbUpVUmpOV2FrcEhUbXhhY1Zac2FHaE5WbkJ2VjFaU1IxZHRWbGRUYkd4cVVtdHdXVlZxU205WFZtUlhXa1JDYWsxRVZraFdiVFZIVlRKS1NWRnVTbFZXVmtwSVZUSjRjMk5zY0VoUFZscE9Va1ZaZDFkV1ZtRmtNV1JIVjFod1ZtSlhhR2hWYTFaM1ZVWnNObEp0ZEd0V2EzQjZWa2N4YjFSck1VWmpSRnBYWWxSQ05GUnJXazVsVmxweldrZHNVMkpJUW05V1YzUmhVekZaZUZWc1dsWmhNbEpQVm0weE5GWXhXWGxsUjNSWFRVUkdlVmt3V21GV2JGbDZVV3hDVjJKSFVreFZha1poWTFaU2RGSnNaRmRpYTBvMVZqSjBZVmxXVVhsVVdHaGhVMFpLYjFWc1VsZGpSbFp6WVVWS2JGWnNjREJhUldSSFYyeGFjMkpFVmxkU2JXaHlWa1JHWVZkR1ZuTmlSbVJPVWpGS01sZFhjRWRXYlZGNFYyeFdVMkpIYUZSWmExcDNUa1phVjFsNlJtaE5WbkJJVmpJMVQyRnNTblJsUjJoWFlrWndNMWt5ZUZwa01YQkdaRVpPVG1GNlZraFdNblJoWkRKR1dGTnVTbFJoTVZwWVdXeG9RMUV4Y0ZaWGJIQnNWbXhLZVZsclpIZFZNa3BYVTI1a1YxWjZRWGhWVkVaVFZqRndTVk5zYUdsV1ZuQjVWa1phVmsxV1RsZFdibEpyVWpOU1dGWnFRbmRYVm5CV1YyeGtWMkpWY0VoV01uQlBWakF4VjJOSGFHRlNWMUpZVlRCa1QxTkhVa1pPVjJ4VFltdEtTMVp0ZUZOU01rbDVVMWhvWVZKWFVtaFZiR1J2VmpGc1dXTklUbGhTYkVwWFZqSXhSMVJyTVZkalJtUlhUV3BHU0ZsWGMzaFhWa1p5WVVaa1UwMHlhREpXYkZKTFV6RktkRlJyWkdwU2JXaFlWV3hXZDFkV1dYaFhiVVpXVFdzeE5GWkhOVmRXVjBwWlVXeFNXbUV5YUVSV01GcGhaRVV4U1dGSGJFNWhlbFkyVjFkMGIxTXhaRWhTV0hCV1ltdGFZVll3YUVOWFJscDBaVVprYTFJeFdrbGFSVnBYWVZaYVdWRllaRmhXYkZwMldYcEdXbVZXVG5KYVJsSm9UVEpvV0Zkc1pEQlpWazE0WTBaa1dHSkZOWEZaYkZaaFUwWldXR1ZIZEdoV2JIQjVXVEJTVDFZeVNsVlNXR1JYWVd0YWNsa3ljM2hYVmxKMFVteFNVMVpHV2xwV01XUTBWakZzVjFwR1pHbFRSVFZaV1d4V1lWWldWblJOVkVKT1RWWndNRlJzVlRWV01ERlhZa1JPV2sxR1ducFdNbmhoVjBkR1JsVnNaR2xXUlZwSlYxUkplRlF4VGxkYVNGSlRZa1UxVDFSWE1XOWtiRnB6V2toa1UwMXJWalZXVjNSaFZVWmFkRlZzVmxwWFNFSllWakJhYzJOdFJrWlRhelZwVW01QmQxZFVRbGRrTVZKelYyNU9WMkZzU2xoV2JuQlhWVVpaZDFwRldteFNNRFZJVm0xNGQyRkZNVmxSYlRsWFlsUkZNRmRXWkZOVFJscHlZa2RHVTJKWGFGVlhWM1JYWkRBMVYxZHVSbFJYUjJoVVZGZDBWMDVHVlhoaFJ6bFhVakJXTlZwVlpHOVdiVXBIWTBST1drMXVhSHBXYWtaclkyMU9TR1ZHVG1obGJGa3hWakZTUTFsWFJYbFNiR1JVVjBkb1ZGWXdaRk5YUmxsM1lVVk9WRkpzYkRWVVZscHJWVEF4V1ZGcmNGZGlXR2hZV1ZaYVMxWldXblZYYkdoWFlsZG5lbFp0Y0VkWGJWWkhXa2hLWVZKdGFIQlZha1pMVjFaa1YyRklaRmROVjFKSVZqSTFVMkV4U1hwVmJHUlZWbXh3TTFVeFduZFdiR1J5WkVaa1RsWnVRalpXVnpGM1ZERmFWazFXV2xkV1JscFhWVzEwVms1V1ZrZFNWR3hSVlZRd09RPT0=
