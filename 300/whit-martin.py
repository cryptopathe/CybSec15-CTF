# Copyright (c) 2015 Pascal Junod <pascal@junod.info>
# Licensed under the MIT license (copy available at https://opensource.org/licenses/MIT)

from Crypto.Cipher import AES
import hashlib

g = 5
p = 185016763548220560290292001994460310082982635689155793720206053378364902512227232163041152194198403400787205750182199771161609947534540743704328842097291929655030992204241346890198003574813135074236440503112124176329005100462352019499623812882056192203725276275796980119366386310962291160169810218119607473977405959218637711453090375384849403942512875578500775464717084668507166479755095200347131172573750573862077724093575834477725380101645590188640611439661601837656577057088008490608408206532063545523655266502870020548683376051500180198756902532503905050482812904315930091320669338595771052422940993969184165364041203

# a = 傻瓜情况下，你真的认为这是容易吗？

# b = 很有趣，你真的认为这是容易吗？

if __name__ == "__main__":
    print ("g   = " + str (g))
    print ("p   = " + str (p))
    print ("a   = " + str (a))
    print ("b   = " + str (b))
    ga = pow (g, a, p)
    print ("ga  = " + str (ga))
    # DEBUG ga  = 148269435073271505596500918203676478260050377054699645297627646124287928021068128874626703723566660218378940694783618009813282462112920447382373172050683959394286963250141692310143491739940296040206510436823896138834900947496798708585546476241568097202388442890614351527789438409260876642960155502421656218430757670276302451509421571533434790063793450615805051836759411127178893817056356576746760434468728709103297947999000188162761143567788765368787645749642475703230750980877550801515162102461542330403649762723475340218697442879386285010217320748650812005518633552322175308740923418721560349120796652666935465200139406
    
    gb = pow (g, b, p)
    print ("gb  = " + str (gb))
    # DEBUG gb  = 109521608064614903921417413416690262413697172507979461475361252709002817072076337286402798222398082256611058127732826695856472177055450077619686030864060892749685895950667479668884035230090536293677249802901224949793707922367721430621345066840979594660800762777480036512763712033902555967666926184553571782023776597469398102655134708894003481084256457190426142457501124148202780225614796899892871599299804290263332780879919819863967664033533749515611667184384700129201590582800893763156098158021477833319005213651191262987237962346400542682580653773951951075311832525434271807071870606588331169695305420057216994177176314
    
    gab = pow (gb, a, p)
    print ("gab = " + str (gab))
    gab = pow (ga, b, p)
    print ("gab = " + str (gab))
    
    IV = '\x23\x43\x79\x62\x53\x65\x63\x31\x35\x20\x72\x75\x6c\x65\x7a\x7a'
    key = hashlib.sha256 (str(gab).encode('utf-8')).digest ()
    enc = AES.new (key, AES.MODE_CBC, IV=IV)
    # flag = 这是不正确的答案。
    c = enc.encrypt (flag)
    # DEBUG c = b'\x9b@\x18$$\x8e\xe4\xb8,\xb4h\xfd\xb6\xec1\n\xd1D)~\x05\x8a\xdf\x01\x03\x93#(f\xb4\xff\xec'

    
